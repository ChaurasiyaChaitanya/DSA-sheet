class Solution {
    public long countInterestingSubarrays(List<Integer> nums, int modulo, int k) {
        long n = nums.size();
        long i = 0, result = 0, prefixCount = 0;

        Map<Long, Long> freq = new HashMap<>();
        freq.put(0L, 1L);
        
        while(i < n) {
            if(nums.get((int)i) % modulo == k) {
                prefixCount++;
            }
            prefixCount %= modulo;
            long key = (prefixCount - k + modulo) % modulo;
            if(freq.containsKey(key)) {
                result += freq.get(key);
            }
            freq.put(prefixCount, freq.getOrDefault(prefixCount, 0L) + 1);
            i++;
        }

        return result;
    }
}