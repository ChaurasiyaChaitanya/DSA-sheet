class Solution {
    public int maxCandies(int[] status, int[] candies, int[][] keys, int[][] containedBoxes, int[] initialBoxes) {
        int n = status.length;
        Queue<Integer> q = new LinkedList<>();

        for(int box : initialBoxes) {
            q.offer(box);
        }

        Set<Integer> closed = new HashSet<>();
        int result = 0;

        while(!q.isEmpty()) {
            int curr = q.poll();
            if(status[curr] == 0) {
                closed.add(curr);
                continue;
            }

            for (int open : keys[curr]) {
                status[open] = 1;
                if (closed.contains(open)) {
                    q.offer(open);
                    closed.remove(open);
                }
            }

            result += candies[curr];

            for (int nbr : containedBoxes[curr]) {
                q.offer(nbr);
            }
        }

        return result;
    }
}