class Solution {
    public int minimizeMax(int[] nums, int p) {
        Arrays.sort(nums);
        int low = 0;
        int high = nums[nums.length-1];

        int result = Integer.MAX_VALUE;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(isPossible(nums, mid, p)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return result;
    }

    private boolean isPossible(int[] nums, int mid, int p) {
        int count = 0;
        int i = 1;

        while(i < nums.length) {
            if(nums[i] - nums[i-1] <= mid) {
                count++;
                i += 2;
            } else {
                i++;
            }
        }

        return count >= p;
    }
}