class Solution {
    public int minCapability(int[] nums, int k) {
        int low = Arrays.stream(nums).min().getAsInt();
        int high = Arrays.stream(nums).max().getAsInt();
        int result = 0;

        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(canAssign(nums, mid, k)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return result;
    }

    private boolean canAssign(int[] nums, int mid, int k) {
        int count = 0;
        for(int i=0; i<nums.length; i++) {
            if(nums[i] <= mid) {
                count++;
                i++;
            }
        }

        return count >= k;
    }
}