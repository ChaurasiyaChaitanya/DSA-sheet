class Solution {
    public int[] smallestSubarrays(int[] nums) {
        int n = nums.length;
        int maxVal = Arrays.stream(nums).max().getAsInt();
        int bits = maxVal == 0 ? 0 : 1 + (int) (Math.log(maxVal) / Math.log(2));

        int[] nearestSetBit = new int[bits];
        Arrays.fill(nearestSetBit, n);

        int[] result = new int[n];
        for(int i=n-1; i>=0; i--) {
            int nearest = i;
            for(int j=0; j<bits; j++) {
                if((nums[i] & (1 << j)) != 0) {
                    nearestSetBit[j] = i;
                } else if(nearestSetBit[j] != n) {
                    nearest = Math.max(nearest, nearestSetBit[j]);
                }
            }
            result[i] = nearest - i + 1;
        }

        return result;
    }
}