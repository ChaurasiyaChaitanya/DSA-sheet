class Solution {
    public int maxEvents(int[][] events) {
        int n = events.length;
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();

        Arrays.sort(events, (a, b) -> a[0] - b[0]);

        int day = events[0][0];
        int i = 0, result = 0;

        while(!minHeap.isEmpty() || i < n) {

            if(minHeap.isEmpty()) {
                day = events[i][0];
            }

            while(i < n && events[i][0] == day) {
                minHeap.add(events[i][1]);
                i++;
            }

            if(!minHeap.isEmpty()) {
                minHeap.poll();
                result++;
            }

            day++;

            while(!minHeap.isEmpty() && minHeap.peek() < day) {
                minHeap.poll();
            }
        }

        return result;
    }
}