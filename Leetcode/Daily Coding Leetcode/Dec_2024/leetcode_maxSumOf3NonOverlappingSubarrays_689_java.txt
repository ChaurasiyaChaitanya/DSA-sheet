class Solution {
    public int[] maxSumOfThreeSubarrays(int[] nums, int k) {
        int n = nums.length;
        int sum1 = 0, sum2 = 0, sum3 = 0;

        int[] result = {0, k, 2*k};

        for(int i=0; i<k; i++) {
            sum1 += nums[i];
            sum2 += nums[i + k];
            sum3 += nums[i + 2*k];
        }

        int max1 = sum1;
        int max2 = sum1 + sum2;
        int max3 = sum1 + sum2 + sum3;

        int idx1 = 0, idx2 = 0, idx3 = k;

        for(int i=0; i<=n-3*k; i++) {
            if(i > 0) {
                sum1 = sum1 - nums[i-1] + nums[i+k-1];
                sum2 = sum2 - nums[i+k-1] + nums[i+2*k-1];
                sum3 = sum3 - nums[i+2*k-1] + nums[i+3*k-1];
            }
            if(sum1 > max1) {
                max1 = sum1;
                idx1 = i;
            }
            if(max1 + sum2 > max2) {
                max2 = max1 + sum2;
                idx2 = idx1;
                idx3 = i+k;
            }
            if(max2 + sum3 > max3) {
                max3 = max2 + sum3;
                result = new int[]{idx2, idx3, i+2*k};
            }
        }

        return result;
    }
}