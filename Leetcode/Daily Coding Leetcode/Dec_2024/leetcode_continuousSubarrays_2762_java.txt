class Solution {
    public long continuousSubarrays(int[] nums) {
        int start = 0, end = 0, n = nums.length;
        int currMin = Integer.MAX_VALUE;
        int currMax = Integer.MIN_VALUE;

        long result = 0; 

        while(end < n) {
            currMin = Math.min(currMin, nums[end]);
            currMax = Math.max(currMax, nums[end]);

            if(currMax - currMin > 2) {
                start = end;
                currMin = nums[end];
                currMax = nums[end];

                while(start - 1 >= 0 && Math.abs(nums[start-1] - nums[end]) <= 2) {
                    start--;
                    currMin = Math.min(currMin, nums[start]);
                    currMax = Math.max(currMax, nums[start]);
                }
            }
            result += (end - start + 1);
            end++;
        }

        return result;
    }
}