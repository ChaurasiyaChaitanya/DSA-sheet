class Solution {
    public int maximumLength(String s) {
        int n = s.length();
        int start = 1, end = n;

        if(!checkCount(s, n, start))
            return -1;

        while(start + 1 < end) {
            int mid = (start + end) / 2;
            if(checkCount(s, n, mid))
                start = mid;
            else
                end = mid;
        }

        return start;
    }

    private boolean checkCount(String s, int n, int mid) {
        int[] occurArr = new int[26];
        int k = 0;
        
        for(int i=0; i<n; i++) {
            while(s.charAt(k) != s.charAt(i))
                k++;
            if(i-k+1 >= mid)
                occurArr[s.charAt(i) - 'a']++;
            if(occurArr[s.charAt(i) - 'a'] > 2)
                return true;
        }
        return false;
    }
}