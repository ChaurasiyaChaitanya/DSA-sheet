class Solution {
    public int[] successfulPairs(int[] spells, int[] potions, long success) {
        int n = spells.length;
        int[] result = new int[n];

        Arrays.sort(potions);

        for(int i=0; i<n; i++) {
            result[i] = binarySearch(potions, spells[i], success);
        }

        return result;
    }

    private int binarySearch(int[] potions, int spell, long success) {
        int n = potions.length, idx = -1;
        int left = 0, right = n - 1;

        while(left <= right) {
            int mid = left + (right - left) / 2;
            if((long) potions[mid] * spell >= success) {
                idx = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }

        return idx == -1 ? 0 : n - idx;
    }
}