class Solution {
    public void solveSudoku(char[][] board) {
        solve(board);
    }

    private boolean solve(char[][] board) {
        for(int i=0; i<9; i++) {
            for(int j=0; j<9; j++) {
                if(board[i][j] == '.') {
                    for(char d='1'; d<='9'; d++) {
                        if(isValid(board, i, j, d)) {
                            board[i][j] = d;

                            if(solve(board)) {
                                return true;
                            }

                            board[i][j] = '.';
                        }
                    }

                    return false;
                }
            }
        }

        return true;
    }

    private boolean isValid(char[][] board, int row, int col, char d) {
        for(int i=0; i<9; i++) {
            // Row check
            if(board[row][i] == d) 
                return false;
            
            // Col check
            if(board[i][col] == d) 
                return false;

            // Index of 3*3 Box
            int boxRow = (row / 3) * 3 + (i / 3);
            int boxCol = (col / 3) * 3 + (i % 3);

            // 3*3 Box check
            if(board[boxRow][boxCol] == d)
                return false;
        }

        return true;
    }
}