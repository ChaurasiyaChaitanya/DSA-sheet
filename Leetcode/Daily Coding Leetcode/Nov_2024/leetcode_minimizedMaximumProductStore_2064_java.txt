class Solution {
    public int minimizedMaximum(int n, int[] quantities) {
        int start = 0, end = 0;
        for(int quantity : quantities) {
            end = Math.max(end, quantity);
        }

        while(start < end) {
            int mid = (start+end)/2;
            if(canDistribute(mid, quantities, n)) {
                end = mid;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }

    private boolean canDistribute(int x, int[] quantities, int n) {
        int j = 0, rem = quantities[j];

        for(int i=0; i<n; i++) {
            if(rem <= x) {
                j++;
                if(j == quantities.length) {
                    return true;
                } else {
                    rem = quantities[j];
                }
            } else {
                rem -= x;
            }
        }
        return false;
    }
}