class Solution {
    public int[] maximumBeauty(int[][] items, int[] queries) {
        int[] result = new int[queries.length];
        Arrays.sort(items, (a,b) -> a[0] - b[0]);
        int max = items[0][1];

        for(int i=0; i<items.length; i++) {
            max = Math.max(max, items[i][1]);
            items[i][1] = max;
        }

        for(int i=0; i<queries.length; i++) {
            result[i] = binarySearch(items, queries[i]);
        }

        return result;
    }

    private int binarySearch(int[][] items, int target) {
        int l = 0, r = items.length - 1;
        int maxBeauty = 0;

        while(l <= r) {
            int mid = (l+r)/2;
            if(items[mid][0] > target) {
                r = mid - 1;
            } else {
                maxBeauty = Math.max(maxBeauty, items[mid][1]);
                l = mid + 1;
            }
        }

        return maxBeauty;
    }
}