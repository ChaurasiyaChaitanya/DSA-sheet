class Solution {
    public int minimumSubarrayLength(int[] nums, int k) {
        int[] bits = new int[32];
        int start = 0, end = 0, n = nums.length, min = n+1;

        while(end < n) {
            updateBits(bits, nums[end], 1);

            while(start <= end && getValue(bits) >= k) {
                min = Math.min(min, end-start+1);
                updateBits(bits, nums[start], -1);
                start++;
            }
            end++;
        }

        return min == n+1 ? -1 : min;
    }

    private void updateBits(int[] bits, int num, int val) {
        for(int i=0; i<32; i++) {
            if((num & (1 << i)) != 0) {
                bits[i] += val;
            }
        }
    }

    private int getValue(int[] bits) {
        int result = 0;
        for(int i=0; i<32; i++) {
            if(bits[i] > 0) {
                result |= (1 << i);
            }
        }
        return result;
    }
}