class Solution {
    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> combine(int n, int k) {
        backtrack(n, k, 1, new ArrayList<>());

        return result;
    }

    private void backtrack(int n, int k, int start, List<Integer> temp) {
        if(k == 0) {
            result.add(new ArrayList<>(temp));
            return;
        }

        for(int i=start; i<=n; i++) {
            temp.add(i);
            backtrack(n, k-1, i+1, temp);
            temp.remove(temp.size() - 1);
        }
    }
}